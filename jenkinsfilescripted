#!/usr/bin/env groovy

node {
   
    //withEnv(ENV_VAR = 'I am environment variable')

//Setting parameters
    properties([parameters([string(defaultValue: 'Hello', description: 'How to greet', name: 'Greetings')])])

    stage('checkout'){
        node {
            checkout scm
        }
    }
    
    stage('Build'){
        node {
            echo "compiling build number: ${env.BUILD_ID}"
            echo "${params.Greetings}"
            
            archiveArtifacts artifacts: '*.md', fingerprint: true
            stash includes: '*.md', name: 'wiki'
        }
        
    }

/*
    stage('Test-native'){
        node('master') {
            echo "testing on native"
            echo "publishing the unit tests"
            unstash 'wiki'
        }
    }

    stage('Test-windows'){
        node('testagent') {
            echo "testing on windows platform"
            echo "publishing the unit tests"
        }
    }
  */

  stage ('Test') {
      parallel linux: {
          node('master'){
              checkout scm
            try {
                unstash 'wiki'
                echo "testing linux"
            }
            finally {
                echo "publish junit tests"
            }
          },
          windows: {
          node('testagent'){
              checkout scm
            try {
                unstash 'wiki'
                echo "testing windows"
            }
            finally {
                echo "publish junit tests"
            }
          }
          
      }
  }  
    stage('Deploy'){
        if (currentBuild.result == null || currentBuild.result == 'SUCCESS' ){
            echo "deploying artifacts to repository"
        }
        
    }

}